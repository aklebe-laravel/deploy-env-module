<?php

namespace Modules\DeployEnv\tests\Feature;

use Illuminate\Support\Facades\File;
use Modules\SystemBase\app\Services\GitService;
use Modules\SystemBase\tests\TestCase;

class GitTest extends TestCase
{
    /**
     * Repository folder which will be deleted after all tests
     */
    const gitTestPath = 'tests/git_pulls';

    /**
     * True to add a unique sign to folders
     *
     * @var bool
     */
    protected bool $uniqueCheckout = true;

    /**
     * True to keep all folders instead of delete them at the end
     *
     * @var bool
     */
    protected bool $keepDirectories = false;

    /**
     * @return void
     */
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @return void
     */
    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub

        if (!$this->keepDirectories) {
            // delete git repositories
            File::deleteDirectory(storage_path(self::gitTestPath));
        }
    }

    /**
     * Testing git pulls to storage/tests/git_pulls/xxx
     *
     * Testing results of
     * GitService::findSatisfiedVersion()
     * GitService::findSatisfiedBranch()
     */
    public function test_constraint_satisfied_versions(): void
    {
        /** @var GitService $gitService */
        $gitService = app(GitService::class);

        $gitSources = [
            // 'aklebe-laravel/test-github-actions' => '^0.1',
            'aklebe-laravel/system-base-module'  => '^1.0',
            // 'aklebe-laravel/acl-module'          => 'dev-master',
            'aklebe-laravel/acl-module'          => '^1.0',
            // 'aklebe-laravel/deploy-env-module'   => '^1.0',
            'aklebe-laravel/form-module'         => '^1.0',
            // 'aklebe-laravel/data-table-module'   => '^1.0',
            // 'aklebe-laravel/telegram-api-module' => '^1.0',
            // 'aklebe-laravel/website-base-module' => '^1.0',
            // 'aklebe-laravel/market-module'       => '^1.0',
            // 'aklebe-laravel/aklebe-bs5-theme'    => '^1.0',
            // 'aklebe-laravel/jumble-sale-theme'   => '^1.0',
        ];

        foreach ($gitSources as $gitSource => $configRequiredConstraint) {

            $gitName = $gitSource;
            $gitDirectory = str_replace('/', '__', $gitName);
            if ($this->uniqueCheckout) {
                $gitDirectory = uniqid($gitDirectory.'__');
            }
            $testRepoFilePath = storage_path(self::gitTestPath.DIRECTORY_SEPARATOR.$gitDirectory);
            $gitSourceCurrent = 'https://github.com/'.$gitName.'.git';
            if (!$gitService->ensureRepository($testRepoFilePath, $gitSourceCurrent, false)) {
                $this->fail(sprintf("Repository failed: %s to %s", $gitSourceCurrent, $testRepoFilePath));
            }

            if (!$gitService->repositoryUpdate($configRequiredConstraint)) {
                $this->fail(sprintf("Unable to pull branch: %s", $gitService->getCurrentBranch()));
            }
        }

        $this->assertTrue(true);
    }
}
