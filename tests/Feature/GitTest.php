<?php

namespace Modules\DeployEnv\tests\Feature;

use Illuminate\Support\Facades\File;
use Modules\SystemBase\app\Services\GitService;
use Modules\SystemBase\tests\TestCase;

class GitTest extends TestCase
{
    /**
     * Repository folder which will be deleted after all tests
     */
    const gitTestPath = 'tests/git_pulls';

    /**
     * @return void
     */
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @return void
     */
    public function tearDown(): void
    {
        parent::tearDown(); // TODO: Change the autogenerated stub

        // delete git repositories
        File::deleteDirectory(storage_path(self::gitTestPath));
    }

    /**
     * Testing results of
     * GitService::findSatisfiedVersion()
     * GitService::findSatisfiedBranch()
     */
    public function test_constraint_satisfied_versions(): void
    {
        /** @var GitService $gitService */
        $gitService = app(GitService::class);

        // prepare the pull
        $gitName = 'test-github-actions';
        $testRepoFilePath = uniqid($gitName.'-');
        $testRepoFilePath = storage_path(self::gitTestPath.DIRECTORY_SEPARATOR.$testRepoFilePath);
        $gitSourceCurrent = 'https://github.com/aklebe-laravel/'.$gitName.'.git';
        if (!$gitService->ensureRepository($testRepoFilePath, $gitSourceCurrent, false)) {
            $this->fail(sprintf("Repository failed: %s to %s", $gitSourceCurrent, $testRepoFilePath));
        }

        // $configRequiredConstraint = '^1.0';
        $configRequiredConstraint = '^0.1';
        if (!$gitService->repositoryFetchAndMerge($configRequiredConstraint)) {
            $this->fail(sprintf("Unable to pull branch: %s", $gitService->getCurrentBranch()));
        }

        $this->assertTrue(true);
    }
}
